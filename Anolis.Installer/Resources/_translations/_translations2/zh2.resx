<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="A_Message" xml:space="preserve">
    <value>当前向导将会帮助您完成安装整个 Anolis 封包的步骤

若要继续, 请按 [下一步]</value>
  </data>
  <data name="A_Title" xml:space="preserve">
    <value>欢迎使用 Anolis 封包安装程序</value>
  </data>
  <data name="B_installBlurb" xml:space="preserve">
    <value>安装内嵌于程序或存储于当前计算机其它位置的封包. 此封包亦可安装至 Windows XP 安装程序的 i386 文件夹.</value>
  </data>
  <data name="B_installRad" xml:space="preserve">
    <value>安装封包</value>
  </data>
  <data name="B_toolsBlurb" xml:space="preserve">
    <value>下载工具集以方便您制作自己的封包或安装程序</value>
  </data>
  <data name="B_toolsRad" xml:space="preserve">
    <value>创建自己的封包或安装程序</value>
  </data>
  <data name="B_uninstallBlurb" xml:space="preserve">
    <value>为了能够还原文件至安装封包前的状态, 您必须要选择一个备份目录</value>
  </data>
  <data name="B_uninstallRad" xml:space="preserve">
    <value>撤销由于安装封包导致的变更</value>
  </data>
  <data name="B_Subtitle" xml:space="preserve">
    <value>选择一个操作以继续</value>
  </data>
  <data name="B_Title" xml:space="preserve">
    <value>选择一个任务</value>
  </data>
  <data name="C_A_anopRad" xml:space="preserve">
    <value>当前计算机中的封包 (*.anop)</value>
  </data>
  <data name="C_A_embedRad" xml:space="preserve">
    <value>内嵌于安装程序中的封包</value>
  </data>
  <data name="C_A_packRad" xml:space="preserve">
    <value>当前计算机中的封包定义文件 (package.xml)</value>
  </data>
  <data name="C_A_Subtitle" xml:space="preserve">
    <value>需要安装的封包既可以是存储于当前计算机文件系统中的, 亦可以是内嵌于安装程序中的</value>
  </data>
  <data name="C_A_Title" xml:space="preserve">
    <value>选择封包并安装</value>
  </data>
  <data name="C_B_error" xml:space="preserve">
    <value>尝试解压封包时遇到错误</value>
  </data>
  <data name="C_B_instantiating" xml:space="preserve">
    <value>封包说明</value>
  </data>
  <data name="C_E_noInfo" xml:space="preserve">
    <value>所选项目 {0} 没有任何与之相关的信息</value>
  </data>
  <data name="C_F_installButton" xml:space="preserve">
    <value>安装</value>
  </data>
  <data name="C_G_status" xml:space="preserve">
    <value>{0}% 已完成 - {1}</value>
  </data>
  <data name="D_A_destLbl" xml:space="preserve">
    <value>目标目录</value>
  </data>
  <data name="D_A_progGroup" xml:space="preserve">
    <value>在开始菜单中创建 Anolis 程序组</value>
  </data>
  <data name="D_A_progGroupAll" xml:space="preserve">
    <value>为所有用户</value>
  </data>
  <data name="D_A_progGroupMe" xml:space="preserve">
    <value>为当前用户</value>
  </data>
  <data name="F_finishButton" xml:space="preserve">
    <value>结束</value>
  </data>
  <data name="F_installationCompleteRestart" xml:space="preserve">
    <value>安装成功结束, 您的计算机即将重启.

重启前请先关闭所有打开的程序, 保存好数据, 并且不要再尝试运行任何程序, 以免造成损失.</value>
  </data>
  <data name="F_installTools" xml:space="preserve">
    <value>安装成功结束.</value>
  </data>
  <data name="F_restartButton" xml:space="preserve">
    <value>重启</value>
  </data>
  <data name="F_Title" xml:space="preserve">
    <value>安装完成</value>
  </data>
  <data name="F_uninstallationComplete" xml:space="preserve">
    <value>卸载成功结束, 您的计算机即将重启.

重启前请先关闭所有打开的程序, 保存好数据, 并且不要再尝试运行任何程序, 以免造成损失.</value>
  </data>
  <data name="C_F_backup" xml:space="preserve">
    <value>创建可供卸载时还原用的备份目录 (建议)</value>
  </data>
  <data name="C_F_backupDesc" xml:space="preserve">
    <value>为了在将来需要卸载此封包时能够还原文件, 您必须创建备份目录</value>
  </data>
  <data name="C_F_comp" xml:space="preserve">
    <value>安装至当前计算机</value>
  </data>
  <data name="C_F_i386" xml:space="preserve">
    <value>安装至 Windows XP 安装程序的 i386 文件夹</value>
  </data>
  <data name="C_F_sysRes" xml:space="preserve">
    <value>创建系统还原点 (建议)</value>
  </data>
  <data name="C_F_sysResDesc" xml:space="preserve">
    <value>增加一层保护, 但请注意这并不能保证文件不遭受修改</value>
  </data>
  <data name="C_C_Subtitle" xml:space="preserve">
    <value>当前封包可能已经更新过了, 现在将再次检查更新.</value>
  </data>
  <data name="C_C_Title" xml:space="preserve">
    <value>检查封包更新</value>
  </data>
  <data name="C_B_Subtitle" xml:space="preserve">
    <value>请耐心等待准备封包以安装</value>
  </data>
  <data name="C_E_Subtitle" xml:space="preserve">
    <value>您可以选择是否安装封包内的组件</value>
  </data>
  <data name="C_E_Title" xml:space="preserve">
    <value>修改封包</value>
  </data>
  <data name="C_F_Subtitle" xml:space="preserve">
    <value>选择一个备份目录和其它选项</value>
  </data>
  <data name="C_F_Title" xml:space="preserve">
    <value>安装选项</value>
  </data>
  <data name="C_G_Subtitle" xml:space="preserve">
    <value>您选择的封包已安装</value>
  </data>
  <data name="C_G_Title" xml:space="preserve">
    <value>安装封包中</value>
  </data>
  <data name="Lang_Attribution" xml:space="preserve">
    <value>heeroyuyj</value>
  </data>
  <data name="Lang_AttributionUri" xml:space="preserve">
    <value />
  </data>
  <data name="Lang_Lcid" xml:space="preserve">
    <value>zh</value>
  </data>
  <data name="Lang_Name" xml:space="preserve">
    <value>简体中文 </value>
  </data>
  <data name="C_C_downloadProgress" xml:space="preserve">
    <value>{0}% - 已完成 {1}KB, 共有 {2}KB, 当前下载速度为 {3}KBps</value>
  </data>
  <data name="C_C_infoChecking" xml:space="preserve">
    <value>检查封包更新</value>
  </data>
  <data name="C_C_infoFailed" xml:space="preserve">
    <value>检查更新失败: 无法下载更新信息</value>
  </data>
  <data name="C_C_infoUpdateAvailableAutomatic" xml:space="preserve">
    <value>{0} 已有新版可用. 您是否希望现在就下载?</value>
  </data>
  <data name="C_C_infoUpdateAvailableManual" xml:space="preserve">
    <value>{0} 已有新版可用, 但您需要手动下载. 单击访问封包的网页以获得更多信息.</value>
  </data>
  <data name="C_C_infoUpdateLatest" xml:space="preserve">
    <value>您已拥有最新版本的 {0}.</value>
  </data>
  <data name="F_installationComplete" xml:space="preserve">
    <value>安装成功结束.</value>
  </data>
  <data name="Wiz_Cancel" xml:space="preserve">
    <value>取消</value>
  </data>
  <data name="Wiz_Next" xml:space="preserve">
    <value>下一步</value>
  </data>
  <data name="Wiz_Prev" xml:space="preserve">
    <value>返回</value>
  </data>
  <data name="C_D_Subtitle" xml:space="preserve">
    <value>重新浏览封包作者的发行说明</value>
  </data>
  <data name="C_D_Title" xml:space="preserve">
    <value>封包发行说明</value>
  </data>
  <data name="C_D_installerNotes" xml:space="preserve">
    <value>Anolis 安装程序信息</value>
  </data>
  <data name="C_D_packageNotes" xml:space="preserve">
    <value>{0} 封包发行说明</value>
  </data>
  <data name="C_F_pathInvalidBackup" xml:space="preserve">
    <value>指定的备份路径是无效的</value>
  </data>
  <data name="C_F_pathInvalidI386" xml:space="preserve">
    <value>指定的 Windows XP 安装程序的 i386 路径是无效的</value>
  </data>
  <data name="C_F_pathExistsBackup" xml:space="preserve">
    <value>指定的备份目录已存在并且包含了文件. 用于备份的目录必须是空目录或尚未建立的!</value>
  </data>
  <data name="C_B_errorPackageXmlNotFound" xml:space="preserve">
    <value>指定的封包并不包含定义文件.</value>
  </data>
  <data name="C_C_skipCheckLbl" xml:space="preserve">
    <value>您可以随时按 [下一步] 按钮以跳过更新.</value>
  </data>
  <data name="A_Message_Cus" xml:space="preserve">
    <value>当前向导将会帮助您完成安装整个 {0} 的步骤

若要继续, 请按 [下一步]</value>
  </data>
  <data name="A_Title_Cus" xml:space="preserve">
    <value>欢迎使用 {0}</value>
  </data>
  <data name="B_installBlurb_Cus" xml:space="preserve">
    <value>安装 {0} 至当前计算机或者 Windows XP 安装程序的 i386 文件夹.</value>
  </data>
  <data name="B_installRad_Cus" xml:space="preserve">
    <value>安装 {0}</value>
  </data>
  <data name="B_toolsBlurb_Cus" xml:space="preserve">
    <value>下载工具集以方便您制作像 {0} 这样的封包或安装程序</value>
  </data>
  <data name="B_uninstallRad_Cus" xml:space="preserve">
    <value>撤销由于 {0} 导致的变更</value>
  </data>
  <data name="C_B_error_Cus" xml:space="preserve">
    <value>尝试解压 {0} 时遇到错误</value>
  </data>
  <data name="C_B_Subtitle_Cus" xml:space="preserve">
    <value>请耐心等待准备 {0} 以安装</value>
  </data>
  <data name="C_D_Subtitle_Cus" xml:space="preserve">
    <value>重新浏览 {0} 的发行说明</value>
  </data>
  <data name="C_G_Subtitle_Cus" xml:space="preserve">
    <value>{0} 已安装</value>
  </data>
  <data name="C_A_anopFilenameLbl" xml:space="preserve">
    <value>文件名称</value>
  </data>
  <data name="C_A_packFilenameLbl" xml:space="preserve">
    <value>文件名称</value>
  </data>
  <data name="C_B_statusLbl" xml:space="preserve">
    <value>准备中...</value>
  </data>
  <data name="C_C_statusLbl" xml:space="preserve">
    <value>准备中...</value>
  </data>
  <data name="C_F_i386Lbl" xml:space="preserve">
    <value>CD 根目录</value>
  </data>
  <data name="D_A_toolsLbl" xml:space="preserve">
    <value>可供下载的工具集包括 Resourcer (强大的资源编辑器), Packager (创建属于你自己的封包和安装程序) 以及多种其它工具.</value>
  </data>
  <data name="E_A_dirLbl" xml:space="preserve">
    <value>目录</value>
  </data>
  <data name="C_A_anopBrowse" xml:space="preserve">
    <value>浏览...</value>
  </data>
  <data name="C_A_packBrowse" xml:space="preserve">
    <value>浏览...</value>
  </data>
  <data name="C_B_Title" xml:space="preserve">
    <value>准备封包中</value>
  </data>
  <data name="C_B_Title_Cus" xml:space="preserve">
    <value>准备 {0} 中</value>
  </data>
  <data name="C_C_downloadInfo" xml:space="preserve">
    <value>访问封包的网页</value>
  </data>
  <data name="C_C_downloadInfo_Cus" xml:space="preserve">
    <value>访问 {0} 的网页</value>
  </data>
  <data name="C_C_downloadNo" xml:space="preserve">
    <value>否</value>
  </data>
  <data name="C_C_downloadYes" xml:space="preserve">
    <value>是</value>
  </data>
  <data name="C_F_backupBrowse" xml:space="preserve">
    <value>浏览...</value>
  </data>
  <data name="C_F_i386Browse" xml:space="preserve">
    <value>浏览...</value>
  </data>
  <data name="C_G_statusLbl" xml:space="preserve">
    <value>准备中...</value>
  </data>
  <data name="D_A_destBrowse" xml:space="preserve">
    <value>浏览...</value>
  </data>
  <data name="D_A_Subtitle" xml:space="preserve">
    <value>选择下载工具集的存放目录并设定其它选项</value>
  </data>
  <data name="D_A_Title" xml:space="preserve">
    <value>目标目录和安装选项</value>
  </data>
  <data name="D_B_status" xml:space="preserve">
    <value>准备中...</value>
  </data>
  <data name="D_B_Subtitle" xml:space="preserve">
    <value>正在下载 Anolis 工具集</value>
  </data>
  <data name="D_B_Title" xml:space="preserve">
    <value>下载中</value>
  </data>
  <data name="E_A_browse" xml:space="preserve">
    <value>浏览...</value>
  </data>
  <data name="E_A_sysRes" xml:space="preserve">
    <value>创建系统还原点 (推荐)</value>
  </data>
  <data name="E_A_sysResDesc" xml:space="preserve">
    <value>增加一层保护, 但请注意这并不能保证文件不遭受修改</value>
  </data>
  <data name="E_A_Title" xml:space="preserve">
    <value>选择用于备份的目录</value>
  </data>
  <data name="E_B_Subtitle" xml:space="preserve">
    <value>选择用于还原的目录</value>
  </data>
  <assembly alias="System.Windows.Forms" name="System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
</root>